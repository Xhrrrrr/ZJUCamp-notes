<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>[perf-3200.map] (4,606,060,560 samples, 0.01%)</title><rect x="1186.2" y="309" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1189.19" y="319.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,535,353,440 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>[perf-3200.map] (50,155,959,094,400 samples, 98.05%)</title><rect x="21.9" y="245" width="1156.9" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="24.88" y="255.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (4,198,989,857,000 samples, 8.21%)</title><rect x="802.0" y="165" width="96.9" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="805.01" y="175.5" >[libjvm.so]</text>
</g>
<g >
<title>[libjvm.so] (4,969,696,920 samples, 0.01%)</title><rect x="1189.4" y="341" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.38" y="351.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,616,161,570 samples, 0.01%)</title><rect x="1170.0" y="85" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1173.00" y="95.5" ></text>
</g>
<g >
<title>[perf-3200.map] (50,670,827,776,120 samples, 99.05%)</title><rect x="10.0" y="293" width="1168.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >[perf-3200.map]</text>
</g>
<g >
<title>[perf-3200.map] (158,464,644,880 samples, 0.31%)</title><rect x="1175.1" y="101" width="3.7" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1178.14" y="111.5" ></text>
</g>
<g >
<title>[libjvm.so] (30,888,888,580 samples, 0.06%)</title><rect x="1178.9" y="325" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.92" y="335.5" ></text>
</g>
<g >
<title>[libjvm.so] (31,323,232,010 samples, 0.06%)</title><rect x="1178.9" y="389" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.91" y="399.5" ></text>
</g>
<g >
<title>Thread-15 (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="485" width="0.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1189.19" y="495.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,656,565,610 samples, 0.01%)</title><rect x="1189.4" y="293" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.39" y="303.5" ></text>
</g>
<g >
<title>[libjvm.so] (16,010,100,850 samples, 0.03%)</title><rect x="1162.6" y="133" width="0.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1165.61" y="143.5" ></text>
</g>
<g >
<title>[perf-3200.map] (34,271,949,152,230 samples, 67.00%)</title><rect x="388.3" y="197" width="790.5" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="391.26" y="207.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (50,671,272,220,560 samples, 99.05%)</title><rect x="10.0" y="373" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >[libjvm.so]</text>
</g>
<g >
<title>[perf-3200.map] (50,670,969,190,260 samples, 99.05%)</title><rect x="10.0" y="341" width="1168.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >[perf-3200.map]</text>
</g>
<g >
<title>[perf-3200.map] (9,414,141,320 samples, 0.02%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.78" y="191.5" ></text>
</g>
<g >
<title>[libjvm.so] (29,272,726,980 samples, 0.06%)</title><rect x="1179.0" y="309" width="0.6" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.96" y="319.5" ></text>
</g>
<g >
<title>[perf-3200.map] (685,989,892,130 samples, 1.34%)</title><rect x="1163.0" y="133" width="15.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1165.98" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,949,494,900 samples, 0.01%)</title><rect x="1189.4" y="325" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.38" y="335.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,545,454,450 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="287.5" ></text>
</g>
<g >
<title>[libjvm.so] (47,444,443,970 samples, 0.09%)</title><rect x="20.8" y="245" width="1.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="23.78" y="255.5" ></text>
</g>
<g >
<title>[perf-3200.map] (50,472,312,626,590 samples, 98.66%)</title><rect x="14.6" y="261" width="1164.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="17.58" y="271.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (9,838,383,740 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.77" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,878,787,780 samples, 0.02%)</title><rect x="1189.8" y="469" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.77" y="479.5" ></text>
</g>
<g >
<title>VM_Thread (146,808,079,340 samples, 0.29%)</title><rect x="1186.4" y="485" width="3.4" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="1189.38" y="495.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,555,555,510 samples, 0.01%)</title><rect x="1186.2" y="261" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1189.20" y="271.5" ></text>
</g>
<g >
<title>[perf-3200.map] (12,135,888,767,530 samples, 23.72%)</title><rect x="898.9" y="181" width="279.9" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="901.87" y="191.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="389" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="399.5" ></text>
</g>
<g >
<title>[libjvm.so] (70,818,181,110 samples, 0.14%)</title><rect x="1184.5" y="357" width="1.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1187.52" y="367.5" ></text>
</g>
<g >
<title>[perf-3200.map] (45,869,403,581,710 samples, 89.67%)</title><rect x="120.8" y="229" width="1058.0" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="123.76" y="239.5" >[perf-3200.map]</text>
</g>
<g >
<title>[perf-3200.map] (9,515,151,420 samples, 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="207.5" ></text>
</g>
<g >
<title>[perf-3200.map] (38,404,040,020 samples, 0.08%)</title><rect x="1177.9" y="69" width="0.9" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1180.91" y="79.5" ></text>
</g>
<g >
<title>[libjvm.so] (5,030,302,980 samples, 0.01%)</title><rect x="1175.0" y="69" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1178.02" y="79.5" ></text>
</g>
<g >
<title>BenchmarkThread (50,672,726,766,000 samples, 99.06%)</title><rect x="10.0" y="485" width="1168.9" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >BenchmarkThread</text>
</g>
<g >
<title>[libjvm.so] (134,959,594,610 samples, 0.26%)</title><rect x="1186.4" y="389" width="3.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.39" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (23,303,030,070 samples, 0.05%)</title><rect x="1185.5" y="325" width="0.6" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1188.55" y="335.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,535,353,440 samples, 0.02%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="255.5" ></text>
</g>
<g >
<title>[libjvm.so] (281,101,007,290 samples, 0.55%)</title><rect x="1179.7" y="405" width="6.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.67" y="415.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,545,454,450 samples, 0.02%)</title><rect x="1189.8" y="325" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="335.5" ></text>
</g>
<g >
<title>[perf-3200.map] (74,343,433,600 samples, 0.15%)</title><rect x="1177.1" y="85" width="1.7" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1180.08" y="95.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,545,454,450 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="271.5" ></text>
</g>
<g >
<title>java (9,888,888,790 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="1192.77" y="495.5" ></text>
</g>
<g >
<title>[libjvm.so] (134,333,331,990 samples, 0.26%)</title><rect x="1141.9" y="149" width="3.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1144.90" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,671,292,422,580 samples, 99.05%)</title><rect x="10.0" y="469" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >[libc.so.6]</text>
</g>
<g >
<title>[libjvm.so] (4,696,969,650 samples, 0.01%)</title><rect x="898.6" y="133" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="901.62" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (9,838,383,740 samples, 0.02%)</title><rect x="1189.8" y="405" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.77" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,757,575,590 samples, 0.03%)</title><rect x="1184.1" y="357" width="0.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1187.13" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (146,808,079,340 samples, 0.29%)</title><rect x="1186.4" y="453" width="3.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.38" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,383,838,340 samples, 0.01%)</title><rect x="224.6" y="197" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="227.58" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,878,787,780 samples, 0.02%)</title><rect x="1189.8" y="453" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.77" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,525,252,480 samples, 0.01%)</title><rect x="1183.5" y="373" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1186.53" y="383.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,545,454,450 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="319.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,555,555,510 samples, 0.01%)</title><rect x="1186.2" y="277" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1189.20" y="287.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,545,454,450 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="351.5" ></text>
</g>
<g >
<title>[libjvm.so] (31,323,232,010 samples, 0.06%)</title><rect x="1178.9" y="373" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.91" y="383.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,884,858,537,010 samples, 9.55%)</title><rect x="786.2" y="181" width="112.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="789.19" y="191.5" >[libjvm.so]</text>
</g>
<g >
<title>[libjvm.so] (8,404,040,320 samples, 0.02%)</title><rect x="1174.9" y="101" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1177.95" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (281,282,825,470 samples, 0.55%)</title><rect x="1179.7" y="469" width="6.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.67" y="479.5" ></text>
</g>
<g >
<title>[perf-3200.map] (1,465,444,429,790 samples, 2.86%)</title><rect x="1145.0" y="149" width="33.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1148.00" y="159.5" >[p..</text>
</g>
<g >
<title>[libjli.so] (9,878,787,780 samples, 0.02%)</title><rect x="1189.8" y="421" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.77" y="431.5" ></text>
</g>
<g >
<title>[libjvm.so] (316,707,067,540 samples, 0.62%)</title><rect x="380.9" y="197" width="7.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="383.95" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,454,545,310 samples, 0.03%)</title><rect x="381.8" y="181" width="0.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="384.83" y="191.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,575,757,530 samples, 0.01%)</title><rect x="1186.2" y="293" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1189.19" y="303.5" ></text>
</g>
<g >
<title>GC_task_thread# (281,282,825,470 samples, 0.55%)</title><rect x="1179.7" y="485" width="6.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1182.67" y="495.5" ></text>
</g>
<g >
<title>[libjvm.so] (31,252,524,940 samples, 0.06%)</title><rect x="1178.9" y="357" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.92" y="367.5" ></text>
</g>
<g >
<title>[libjvm.so] (127,060,604,790 samples, 0.25%)</title><rect x="1142.1" y="133" width="2.9" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1145.07" y="143.5" ></text>
</g>
<g >
<title>__sched_yield (11,777,777,660 samples, 0.02%)</title><rect x="1189.5" y="389" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1192.50" y="399.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,919,191,870 samples, 0.01%)</title><rect x="1189.4" y="309" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.38" y="319.5" ></text>
</g>
<g >
<title>[libjvm.so] (9,252,525,160 samples, 0.02%)</title><rect x="1176.9" y="85" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1179.87" y="95.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="357" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="367.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,232,323,140 samples, 0.02%)</title><rect x="1189.8" y="133" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.78" y="143.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="405" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="469" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (31,333,333,020 samples, 0.06%)</title><rect x="1178.9" y="453" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.91" y="463.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="373" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="383.5" ></text>
</g>
<g >
<title>[libjvm.so] (9,868,686,770 samples, 0.02%)</title><rect x="1179.4" y="261" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.40" y="271.5" ></text>
</g>
<g >
<title>[libjvm.so] (50,671,282,321,570 samples, 99.05%)</title><rect x="10.0" y="437" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >[libjvm.so]</text>
</g>
<g >
<title>[libjvm.so] (5,363,636,310 samples, 0.01%)</title><rect x="1162.8" y="101" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1165.84" y="111.5" ></text>
</g>
<g >
<title>[libjvm.so] (10,717,171,610 samples, 0.02%)</title><rect x="224.5" y="213" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="227.53" y="223.5" ></text>
</g>
<g >
<title>[libjvm.so] (24,262,626,020 samples, 0.05%)</title><rect x="1188.9" y="373" width="0.6" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1191.94" y="383.5" ></text>
</g>
<g >
<title>C2_CompilerThre (31,333,333,020 samples, 0.06%)</title><rect x="1178.9" y="485" width="0.7" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1181.91" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,020,201,950 samples, 0.01%)</title><rect x="120.6" y="213" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="123.59" y="223.5" ></text>
</g>
<g >
<title>[libjvm.so] (90,555,554,650 samples, 0.18%)</title><rect x="385.8" y="165" width="2.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="388.83" y="175.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="437" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="447.5" ></text>
</g>
<g >
<title>[perf-3200.map] (19,717,171,520 samples, 0.04%)</title><rect x="1178.3" y="53" width="0.5" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1181.34" y="63.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,237,808,038,430 samples, 8.28%)</title><rect x="1081.0" y="165" width="97.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1084.05" y="175.5" >[perf-3200...</text>
</g>
<g >
<title>[libjvm.so] (44,151,514,710 samples, 0.09%)</title><rect x="897.7" y="149" width="1.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="900.75" y="159.5" ></text>
</g>
<g >
<title>[libjvm.so] (6,919,191,850 samples, 0.01%)</title><rect x="1189.3" y="357" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.34" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,979,797,760 samples, 0.04%)</title><rect x="1184.9" y="341" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1187.94" y="351.5" ></text>
</g>
<g >
<title>[libjvm.so] (7,222,222,150 samples, 0.01%)</title><rect x="1175.0" y="85" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1177.98" y="95.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,313,131,220 samples, 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.78" y="159.5" ></text>
</g>
<g >
<title>[perf-3200.map] (50,670,969,190,260 samples, 99.05%)</title><rect x="10.0" y="309" width="1168.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (13,050,504,920 samples, 0.03%)</title><rect x="1162.2" y="117" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1165.25" y="127.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,030,302,940 samples, 0.02%)</title><rect x="1144.8" y="117" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1147.79" y="127.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,515,151,420 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="223.5" ></text>
</g>
<g >
<title>[libjvm.so] (9,838,383,740 samples, 0.02%)</title><rect x="1189.8" y="373" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.77" y="383.5" ></text>
</g>
<g >
<title>[libjvm.so] (281,282,825,470 samples, 0.55%)</title><rect x="1179.7" y="421" width="6.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.67" y="431.5" ></text>
</g>
<g >
<title>[libjvm.so] (7,424,242,350 samples, 0.01%)</title><rect x="120.6" y="229" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="123.58" y="239.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,202,020,110 samples, 0.02%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.78" y="127.5" ></text>
</g>
<g >
<title>[libjvm.so] (8,686,868,600 samples, 0.02%)</title><rect x="1176.9" y="69" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1179.88" y="79.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,343,434,250 samples, 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.78" y="175.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,767,676,570 samples, 0.04%)</title><rect x="1179.2" y="293" width="0.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.18" y="303.5" ></text>
</g>
<g >
<title>[libjvm.so] (10,626,262,520 samples, 0.02%)</title><rect x="1080.8" y="149" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1083.80" y="159.5" ></text>
</g>
<g >
<title>[perf-3200.map] (50,670,969,190,260 samples, 99.05%)</title><rect x="10.0" y="325" width="1168.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (146,808,079,340 samples, 0.29%)</title><rect x="1186.4" y="437" width="3.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.38" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,671,292,422,580 samples, 99.05%)</title><rect x="10.0" y="453" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >[libc.so.6]</text>
</g>
<g >
<title>[libc.so.6] (146,808,079,340 samples, 0.29%)</title><rect x="1186.4" y="469" width="3.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.38" y="479.5" ></text>
</g>
<g >
<title>[libjvm.so] (50,671,282,321,570 samples, 99.05%)</title><rect x="10.0" y="405" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >[libjvm.so]</text>
</g>
<g >
<title>[libjvm.so] (69,858,585,160 samples, 0.14%)</title><rect x="1168.5" y="117" width="1.6" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1171.49" y="127.5" ></text>
</g>
<g >
<title>[libjvm.so] (31,333,333,020 samples, 0.06%)</title><rect x="1178.9" y="437" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.91" y="447.5" ></text>
</g>
<g >
<title>[perf-3200.map] (8,555,555,470 samples, 0.02%)</title><rect x="387.7" y="149" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="390.71" y="159.5" ></text>
</g>
<g >
<title>[libjvm.so] (31,333,333,020 samples, 0.06%)</title><rect x="1178.9" y="421" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.91" y="431.5" ></text>
</g>
<g >
<title>all (51,155,534,841,980 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(255,130,130)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,414,141,320 samples, 0.02%)</title><rect x="1178.6" y="37" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1181.58" y="47.5" ></text>
</g>
<g >
<title>[libjvm.so] (109,222,221,130 samples, 0.21%)</title><rect x="1183.6" y="373" width="2.6" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1186.63" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (31,333,333,020 samples, 0.06%)</title><rect x="1178.9" y="469" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.91" y="479.5" ></text>
</g>
<g >
<title>[libjvm.so] (146,808,079,340 samples, 0.29%)</title><rect x="1186.4" y="421" width="3.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.38" y="431.5" ></text>
</g>
<g >
<title>[libjvm.so] (31,333,333,020 samples, 0.06%)</title><rect x="1178.9" y="405" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.91" y="415.5" ></text>
</g>
<g >
<title>[libjvm.so] (13,313,131,180 samples, 0.03%)</title><rect x="1179.3" y="277" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.33" y="287.5" ></text>
</g>
<g >
<title>[libjvm.so] (9,555,555,460 samples, 0.02%)</title><rect x="1162.8" y="117" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1165.76" y="127.5" ></text>
</g>
<g >
<title>[libjvm.so] (66,666,666,000 samples, 0.13%)</title><rect x="1168.6" y="101" width="1.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1171.57" y="111.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,424,242,380 samples, 0.01%)</title><rect x="1186.2" y="245" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1189.20" y="255.5" ></text>
</g>
<g >
<title>[perf-3200.map] (50,670,676,260,970 samples, 99.05%)</title><rect x="10.0" y="277" width="1168.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="13.01" y="287.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (29,767,676,470 samples, 0.06%)</title><rect x="1185.4" y="341" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1188.45" y="351.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="325" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1189.19" y="335.5" ></text>
</g>
<g >
<title>JVM_MonitorNotifyAll (14,969,696,820 samples, 0.03%)</title><rect x="1080.2" y="165" width="0.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1083.25" y="175.5" ></text>
</g>
<g >
<title>[libjvm.so] (29,737,373,440 samples, 0.06%)</title><rect x="387.0" y="149" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="390.03" y="159.5" ></text>
</g>
<g >
<title>[libjvm.so] (50,671,282,321,570 samples, 99.05%)</title><rect x="10.0" y="421" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >[libjvm.so]</text>
</g>
<g >
<title>[libjvm.so] (10,747,474,640 samples, 0.02%)</title><rect x="1080.3" y="149" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1083.35" y="159.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="421" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="431.5" ></text>
</g>
<g >
<title>[libjvm.so] (31,191,918,880 samples, 0.06%)</title><rect x="1178.9" y="341" width="0.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1181.92" y="351.5" ></text>
</g>
<g >
<title>[libjvm.so] (19,141,413,950 samples, 0.04%)</title><rect x="1080.6" y="165" width="0.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1083.61" y="175.5" ></text>
</g>
<g >
<title>[libjvm.so] (263,171,714,540 samples, 0.51%)</title><rect x="382.2" y="181" width="6.0" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="385.17" y="191.5" ></text>
</g>
<g >
<title>[libjvm.so] (281,282,825,470 samples, 0.55%)</title><rect x="1179.7" y="437" width="6.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.67" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (46,212,120,750 samples, 0.09%)</title><rect x="20.8" y="229" width="1.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="23.79" y="239.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,545,454,450 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="303.5" ></text>
</g>
<g >
<title>[libjvm.so] (146,808,079,340 samples, 0.29%)</title><rect x="1186.4" y="405" width="3.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.38" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (281,282,825,470 samples, 0.55%)</title><rect x="1179.7" y="453" width="6.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.67" y="463.5" ></text>
</g>
<g >
<title>[perf-3200.map] (41,359,837,970,240 samples, 80.85%)</title><rect x="224.8" y="213" width="954.0" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="227.77" y="223.5" >[perf-3200.map]</text>
</g>
<g >
<title>[libjvm.so] (279,383,835,590 samples, 0.55%)</title><rect x="1179.7" y="389" width="6.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1182.71" y="399.5" ></text>
</g>
<g >
<title>[libjvm.so] (50,671,282,321,570 samples, 99.05%)</title><rect x="10.0" y="389" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >[libjvm.so]</text>
</g>
<g >
<title>JVM_MonitorNotifyAll (17,636,363,460 samples, 0.03%)</title><rect x="1162.1" y="133" width="0.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1165.14" y="143.5" ></text>
</g>
<g >
<title>[perf-3200.map] (13,585,858,450 samples, 0.03%)</title><rect x="387.9" y="165" width="0.3" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="390.92" y="175.5" ></text>
</g>
<g >
<title>[libjvm.so] (4,454,545,410 samples, 0.01%)</title><rect x="1189.4" y="277" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.39" y="287.5" ></text>
</g>
<g >
<title>[libjvm.so] (6,878,787,810 samples, 0.01%)</title><rect x="1176.9" y="53" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1179.91" y="63.5" ></text>
</g>
<g >
<title>[libjvm.so] (50,671,272,220,560 samples, 99.05%)</title><rect x="10.0" y="357" width="1168.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >[libjvm.so]</text>
</g>
<g >
<title>[libjvm.so] (6,303,030,240 samples, 0.01%)</title><rect x="1144.6" y="101" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1147.59" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="453" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1189.19" y="463.5" ></text>
</g>
<g >
<title>[libjvm.so] (52,979,797,450 samples, 0.10%)</title><rect x="1168.8" y="85" width="1.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1171.78" y="95.5" ></text>
</g>
<g >
<title>[perf-3200.map] (9,545,454,450 samples, 0.02%)</title><rect x="1189.8" y="357" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1192.77" y="367.5" ></text>
</g>
<g >
<title>[perf-3200.map] (4,636,363,590 samples, 0.01%)</title><rect x="1186.2" y="341" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1189.19" y="351.5" ></text>
</g>
<g >
<title>[perf-3200.map] (376,929,289,160 samples, 0.74%)</title><rect x="1170.1" y="117" width="8.7" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1173.11" y="127.5" ></text>
</g>
<g >
<title>[libjvm.so] (87,858,584,980 samples, 0.17%)</title><rect x="1142.8" y="117" width="2.0" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1145.76" y="127.5" ></text>
</g>
<g >
<title>[libjli.so] (9,878,787,780 samples, 0.02%)</title><rect x="1189.8" y="437" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1192.77" y="447.5" ></text>
</g>
</g>
</svg>
